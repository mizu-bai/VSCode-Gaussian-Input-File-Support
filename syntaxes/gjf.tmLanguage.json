{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "gjf",
	"patterns": [
		{ "include": "#com-startup" },
		{ "include": "#com-route" },
		{ "include": "#string-double" },
		{ "include": "#string-single" },
		{ "include": "#number" },
		{ "include": "#atom" },
		{ "include": "#comment" }
	],
	"repository": {
		"com-startup": {
			"begin": "%",
			"beginCaptures": {
				"0": { "name": "storage.type" }
			},
			"end": "$",
			"patterns": [
				{ "include": "#com-link-0" },
				{ "include": "#string-double" },
				{ "include": "#string-single" },
				{ "include": "#number" }
			]
		},
		"com-route": {
			"begin": "#",
			"beginCaptures": {
				"0": { "name": "storage.type" }
			},
			"end": "$",
			"patterns": [
				{ "include": "#com-basis" },
				{ "include": "#com-cmd" },
				{ "include": "#com-option" },
				{ "include": "#com-method" },
				{ "include": "#string-double" },
				{ "include": "#string-single" }
			]
		},
		"com-option": {
			"patterns": [
				{ "include": "#scrf" },
				{ "include": "#guess" },
				{ "include": "#geometry" },
				{ "include": "#opt-irc" },
				{ "include": "#scf" },
				{ "include": "#integral-cphf" },
				{ "include": "#population-analysis" },
				{ "include": "#other" },
				{ "include": "#td" }
			]
		},
		"scrf": {
			"match": "(?i)(scrf|solvent)",
			"name": "variable.language"
		},
		"guess": {
			"match": "(?i)(guess|read|tcheck)",
			"name": "variable.language"
		},
		"geometry": {
			"match": "(?i)(geom|checkpoint|allcheck|connectivity|nodistance)",
			"name": "variable.language"
		},
		"opt-irc": {
			"match": "(?i)(readopt|calcfc|readfc|rcfc|calcall|symmetry|restart|pseudo|maxpoints|recalc|stepsize|ts|maxstep|eigentest|noeigentest|forward|reverse|z-matrix|modredundant|redundant|cartesian|gediis|rfo|ef)",
			"name": "variable.language"
		},
		"scf": {
			"match": "(?i)(scf|maxcycle|conver|qc)",
			"name": "variable.language"
		},
		"integral-cphf": {
			"match": "(?i)(integral|int|cphf|grid|fine|finegrid|ultrafine|ultrafinegrid|superfine|superfinegrid|coarse|coarsegrid|sg1|sg1grid)",
			"name": "variable.language"
		},
		"population-analysis": {
			"match": "(?i)(pop|full|nbo|nbo6|nbo6read)",
			"name": "variable.language"
		},
		"other": {
			"match": "(?i)nosymm",
			"name": "variable.language"
		},
		"td": {
			"match": "(?i)(singlets|triplets|root)",
			"name": "variable.language"
		},
		"com-cmd": {
			"match": "(?i)(irc|opt|fopt|popt|freq|nmr|td)",
			"name": "keyword.control"
		},
		"com-link-0": {
			"match": "(?i)(nprocshared|mem|chk|oldchk|rwf|lindaworkers|usessh|save|nosave)",
			"name": "keyword.control"
		},
		"com-basis": {
			"match": "(?i)(sto-3g|3-21g|6-21g|6-31g|6-311g|d95v|d95|shc|cep-4g|cep-31g|cep-121g|lanl2mb|lanl2dz|sdd|sddall|cc-pvdz|cc-pvtz|cc-pvqz|cc-pv5z|cc-pv6z|sv|svp|tzv|tzvp|def2sv|def2svp|def2svpp|def2tzv|def2tzvp|def2tzvpp|def2qzv|def2qzvp|def2qzvpp|qzvp|midix|epr-ii|epr-iii|ugbs|mtsmall|w06|fit|notfit|auto)",
			"name": "support.function"
		},
		"com-method": {
			"match": "(?i)(hf|mp2|mp3|mp4|mp5|b2plyp|mpw2plyp|ci|b3lyp|b3p86|b3pw91|o3lyp|apfd|apf|wb97xd|lc-whpbe|lc-wpbe|cam-b3lyp|wb97xd|wb97|wb97x|mn15|m11|sogga11x|n12sx|mn12sx|pw6b95|pw6b95d3|m08hx|m06|m06hf|m062x|m05|m052x|pbe1pbe|hseh1pbe|ohse2pbe|ohse1pbe|pbeh1pbe|b1b95|b1lyp|mpw1pw91|mpw1lyp|mpw1pbe|mpw3pbe|b98|b971|b972|tpssh|thcthhyb|bmk|hissbpbe|x3lyp|bhandh|bhandhlyp|iop)",
			"name": "support.function"
		},
		"string-double": {
			"begin": "\"",
			"end": "\"",
			"name": "string.quoted.double"
		},
		"string-single": {
			"begin": "'",
			"end": "'",
			"name": "string.quoted.single"
		},
		"number": {
			"match": "(\\+|-)?(\\d*(\\.\\d+)|\\d+)",
			"name": "constant.numeric.gjf"
		},
		"atom": {
			"match": "\\b(H|D|T|He|Li|Be|B|C|N|O|F|Ne|Na|Mg|Al|Si|P|S|Cl|Ar|K|Ca|Sc|Ti|V|Cr|Mn|Fe|Co|Ni|Cu|Zn|Ga|Ge|As|Se|Br|Kr|Rb|Sr|Y|Zr|Nb|Mo|Tc|Ru|Rh|Pd|Ag|Cd|In|Sn|Sb|Te|I|Xe|Cs|Ba|La|Ce|Pr|Nd|Pm|Sm|Eu|Gd|Tb|Dy|Ho|Er|Tm|Yb|Lu|Hf|Ta|W|Re|Os|Ir|Pt|Au|Hg|Tl|Pb|Bi|Po|At|Rn|Fr|Ra|Ac|Th|Pa|U|Np|Pu|Am|Cm|Bk|Cf|Es|Fm|Md|No|Lr|Rf|Db|Sg|Bh|Hs|Mt|Ds|Rg|Cn|Nh|Fl|Mc|Lv|Ts|Og)\\b",
			"name": "constant.language.gjf"
		},
		"comment": {
			"match": "^!.*$",
			"name": "comment.line.gjf"
		}
	},
	"scopeName": "source.gjf"
}
